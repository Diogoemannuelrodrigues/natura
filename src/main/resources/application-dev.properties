#server.port=${port:8081}
# ===============================
# = DATA SOURCE
# ===============================
# Set here configurations for the database connection
spring.datasource.url=jdbc:postgresql://localhost:5432/naturaNovo?createDatabaseIfNotExist=true&useSSL=false
spring.datasource.username=postgres
spring.datasource.password=123456
spring.datasource.driver-class-name=org.postgresql.Driver
# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle=true
spring.datasource.validationQuery=SELECT 1
# ===============================
# = JPA / HIBERNATE
# ===============================
# Show or not log for each sql query
spring.jpa.show-sql=true
# Hibernate ddl auto (create, create-drop, update): with "create-drop" the database
# schema will be automatically created afresh for every start of application
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.properties.hibernate.format_sql=true
jwt.secret=DbzComAbacate
jwt.expiration=84600000
spring.flyway.baseline-on-migrate=true
# Naming strategy
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl
spring.jpa.hibernate.naming.physical-strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy
# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

#spring.rabbitmq.host=localhost
#spring.rabbitmq.port=5672
#spring.rabbitmq.username=guest
#spring.rabbitmq.password=guest

spring.rabbitmq.addresses=amqps://ubogkbki:ky2NpUXmHtcW9dKl1EYkN6dbizs3HIdm@elk.rmq2.cloudamqp.com/ubogkbki
spring.rabbitmq.queue=ms.natura

jsa.rabbitmq.exchange=NATURA
jsa.rabbitmq.routingkey=naturinha

cloud.aws.region.static=sa-east-1
cloud.aws.credentials.accessKey=***
cloud.aws.credentials.secretKey=***
cloud.aws.end-point.uri=https://sqs.sa-east-1.amazonaws.com/224590143628/natura-sqs